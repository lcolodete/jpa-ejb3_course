COLEÇÕES PERSISTENTES
=====================

Hibernate requer que campos de coleções do tipo valor sejam declarados 
através de uma interface.

As   interfaces   que   podem   ser   utilizadas   são: java.util.Set, 
java.util.Collection,          java.util.List,          java.util.Map, 
java.util.SortedSet,    java.util.SortedMap    ou   qualquer coisa que 
implemente org.hibernate.usertype.UserCollectionType.

Intâncias  de  coleções possuem o comportamento usual dos tipos valor. 
São automaticamente  persistidas  quando  referenciadas por  um objeto 
persistente  e  automaticamente   deletadas  quando   deixam  de   ser 
referenciadas. Se uma  coleção é passada de um objeto persistente para
outro, seus elementos podem ser movidos de uma tabela para outra.


Coleções de elementos
=====================

Coleções  podem  conter  praticamente   qualquer  tipo   Hibernate  e, 
naturalmente, podem referenciar outras entidades. Esta é uma distinção 
importante: uma  coleção de  objetos pode ser  tratada com a semântica
do "valor" (seu  ciclo de vida  depende completamente do ciclo de vida 
do objeto proprietário da coleção)  ou pode ser  uma  referência  para 
outra  entidade,  com seu próprio  ciclo de vida.  Neste caso apenas o 
"link"  entre os dois  objetos é considerado ser o  estado  armazenado 
pela coleção.

Os  elementos   de  uma   coleção  são   mapeados  por   <element>  ou 
<composite-element>,  ou  no  caso  de  referências  a  entidades, com 
<one-to-many>  ou  <many-to-many>.   Os  dois  primeiros  elementos de 
mapeamento  possuem  a  semântica  do  "valor",  e  os outros dois são 
utilizados para mapear associações.


ATENÇÃO 1
=========

No  momento que o  método abaixo - usuario.adicionarTelefone(telefone)
- é executado o método telefones.add(telefone) o que provoca um acesso 
ao banco de dados para se saber se o  telefone que será  cadastrado já
está na relação de telefones cadastrados. 

Observe  que  este  select  acontece  embora  não  estejamos  em   uma 
transação.   A  sessão está aberta, mas a transação não. Mesmo assim a 
relação de telefones é  recuperada  do banco de dados. A transação foi
necessária para salvar o objeto usuário.  Sem a transação que  aparece
abaixo  o  novo  telefone  cadastrado  nãoseria persistido no banco de 
dados.
 
if (usuario.adicionarTelefone(telefone))
{	
    HibernateUtil.beginTransaction();
    usuarioDAO.altera(usuario);
    HibernateUtil.commitTransaction();
	
    System.out.println('\n' + "Alteracao efetuada com sucesso!");
}


ATENÇÃO 2
=========

O manual do Hibernate dá a entender que quando uma transação é fechada
a  conexão  JDBC  é  retornada para o pool de conexões, mas isto não é 
verdade: basta ler a ATENÇÃO  1  para  ver  que uma  busca ao banco de 
dados pode acontecer fora de uma transação.
